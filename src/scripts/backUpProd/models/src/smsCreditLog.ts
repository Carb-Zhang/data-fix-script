import { Schema, Document, model, Types } from 'mongoose';

interface ExtraInfo {
    purchasedId?: string;

    smsCount?: number;

    campaignName?: string;

    campaignId?: string;

    campaignJobLaunchId?: string;

    campaignJobId?: string;

    ticketId?: string;

    currency?: string;

    paidAmount?: number;
}

export interface SmsCreditLog {
    business: string;

    eventType?: string;

    source?: string;

    //generated by eventType and source
    title: string;

    smsCreditChange?: number;

    lockedSmsCreditsChange?: number;

    smsCreditsBalance?: number;

    extraInfo?: ExtraInfo;

    country?: string;

    smsCreditsAvgCost?: number;

    eventTime?: Date;
}

export interface SmsCreditLogDocument extends SmsCreditLog, Document<Types.ObjectId> {
    id: string;
    createdTime: Date;
    modifiedTime: Date;
}

export const SmsCreditLogSchema = new Schema(
    {
        business: {
            type: String,
            required: true,
        },

        smsCreditChange: Number,

        lockedSmsCreditsChange: Number,

        smsCreditsBalance: Number,

        //lock,spend,refund,top-up
        eventType: String,

        source: String,

        title: String,

        country: String,

        smsCreditsAvgCost: Number,

        eventTime: Date,

        extraInfo: {
            purchasedId: String,

            smsCount: Number,

            campaignName: String,

            campaignId: String,

            campaignJobLaunchId: String,

            campaignJobId: String,

            ticketId: String,

            currency: String,

            paidAmount: Number,
        },
    },
    {
        autoIndex: process.env.NODE_ENV == 'development',
        timestamps: {
            createdAt: 'createdTime',
            updatedAt: 'modifiedTime',
        },
    },
);

SmsCreditLogSchema.index({ business: 1 });
const SmsCreditLogModel = model<SmsCreditLogDocument>('smsCreditLog', SmsCreditLogSchema);

export default SmsCreditLogModel;
